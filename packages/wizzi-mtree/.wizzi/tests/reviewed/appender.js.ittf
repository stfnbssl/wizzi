base_test( appender )
	
	$append imports
		var mocks = require('../../mocks/misc')
		var MTreeBrickProvider = require('../../../lib/loader/mTreeBrickProvider')
		var mixer = require('../../../lib/loader/mixer')
		var appender = require('../../../lib/loader/appender')

	var
		decl store
		decl appendedModel
		decl node

	before-async

        _ getFSDocumentStore
            f_cb_throw( fsStore )
                set store = fsStore
                _ done

	it-async should append a fragment 

		var content_filepath
			_ path.join
				@ __dirname
				@ 'repo'
				@ 'data'
				@ 'appender_1.tests.ittf'
            
		_ MTreeBrickProvider.createFromUri
			@ content_filepath
			{
				@ mTreeBuildUpContext
					{
				@ productionContext mocks.ProductionContext
				@ __ittfDocumentStore store
			f_cb_no_err( provider )
				var mTree = provider.getPrimaryMTreeBrick()
				_ mixer
					@ mTree
					@ provider
					f_cb_test( mixedModel )
						_ appender
							@ mixedModel
							f_cb_test( appendedModel )
                                # loog 'appendedModel.toIttf()', appendedModel.toIttf()
                                tobe_object( appendedModel )
                                tobe_array( appendedModel.nodes, 1 )
                                tobe_object( appendedModel.nodes[0] )
                                
                                set node = appendedModel.nodes[0]
                                tobe_number( node.row, 1 )
                                tobe_number( node.col, 1 )
                                tobe_string( node.name, 'root' )

                                tobe_array( node.children, 1 )
                                set node = node.children[0]
                                tobe_number( node.row, 1 )
                                tobe_number( node.col, 1 )
                                tobe_string( node.name, 'leaf' )
                                tobe_string( node.value, '1' )

                                tobe_array( node.children, 1 )
                                set node = node.children[0]
                                tobe_number( node.row, 2 )
                                tobe_number( node.col, 5 )
                                tobe_string( node.name, 'leaf' )
                                tobe_string( node.value, '1.1' )

                                _ done()

	it-async should ovveride a virtual node

		var content_filepath
			_ path.join
				@ __dirname
				@ 'repo'
				@ 'data'
				@ 'appender_virtual_1.tests.ittf'
            
		_ MTreeBrickProvider.createFromUri
			@ content_filepath
			{
				@ mTreeBuildUpContext
					{
				@ productionContext mocks.ProductionContext
				@ __ittfDocumentStore store
			f_cb_no_err( provider )
				var mTree = provider.getPrimaryMTreeBrick()
				_ mixer
					@ mTree
					@ provider
					f_cb_test( mixedModel )
						_ appender
							@ mixedModel
							f_cb_test( appendedModel )
                                # loog 'appendedModel.toIttf()', appendedModel.toIttf()
                                
                                tobe_object( appendedModel )
                                tobe_array( appendedModel.nodes, 1 )
                                tobe_object( appendedModel.nodes[0] )
                                
                                set node = appendedModel.nodes[0]
                                tobe_number( node.row, 1 )
                                tobe_number( node.col, 1 )
                                tobe_string( node.name, 'root' )

                                tobe_array( node.children, 1 )
                                set node = node.children[0]
                                tobe_number( node.row, 1 )
                                tobe_number( node.col, 1 )
                                tobe_string( node.name, 'leaf' )
                                tobe_string( node.value, '1' )

                                tobe_array( node.children, 1 )
                                set node = node.children[0]
                                tobe_number( node.row, 2 )
                                tobe_number( node.col, 5 )
                                tobe_string( node.name, 'leaf' )
                                tobe_string( node.value, '1.1' )

                                tobe_array( node.children, 1 )
                                set node = node.children[0]
                                tobe_number( node.row, 4 )
                                tobe_number( node.col, 13 )
                                tobe_string( node.name, 'leaf' )
                                tobe_string( node.value, 'x.x.x' )

                                _ done()                                