html
    $
        var grid_breakpoints = {
            xs: 0,
            sm: 576,
            md: 768,
            lg: 992,
            xl: 1200
        };
        // Breakpoint viewport sizes and media queries.
        // Breakpoints are defined as a map of (name: minimum width), order from small to large:
        //    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)
        // The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.
        // Name of the next breakpoint, or null for the last breakpoint.
        //    >> breakpoint-next(sm)
        //    md
        //    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
        //    md
        //    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
        //    md
        function breakpoint_next(name, breakpoints, breakpoint_names) {
            breakpoints = breakpoints ? breakpoints : grid_breakpoints;
            breakpoint_names = breakpoint_names ? breakpoint_names : Object.keys(breakpoints);
            var n = breakpoint_names.indexOf(name);
            if (n < 0) {
                 @error "breakpoint `#{$name}` not found in `#{$breakpoints}`";
            }
            return n < breakpoint_names.length ? breakpoint_names[n + 1] : null);
        }
        // Minimum breakpoint width. Null for the smallest (first) breakpoint.
        //    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
        //    576px
        function breakpoint_min(name, breakpoints) {
            breakpoints = breakpoints ? breakpoints : grid_breakpoints;
            var min = breakpoints[name];
            return min != 0 ? min : null);
        }
        // Maximum breakpoint width. Null for the largest (last) breakpoint.
        // The maximum value is calculated as the minimum of the next one less 0.02px
        // to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.
        // See https://www.w3.org/TR/mediaqueries-4/#mq-min-max
        // Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.
        // See https://bugs.webkit.org/show_bug.cgi?id=178261
        //
        //    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
        //    767.98px
        function breakpoint_max(name, breakpoints) {
            breakpoints = breakpoints ? breakpoints : grid_breakpoints;
            var next = breakpoint_next(name, breakpoints);
            return next ? breakpoint_min(next, breakpoints) - .02 : null);
        }
        // Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.
        // Useful for making responsive utilities.
        //
        //    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
        //    ""  (Returns a blank string)
        //    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
        //    "-sm"
        function breakpoint_infix(name, breakpoints) {
            breakpoints = breakpoints ? breakpoints : grid_breakpoints;
            return breakpoint_min(name, breakpoints) == null ? "" : "-" + name;
        }

    $fragment media-breakpoint-up
        $params &name, &breakpoints|&grid_breakpoints
        - Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
        - Makes the @content apply to the given breakpoint and wider.
        $ var min = breakpoint_min(name, breakpoints)

        $if min
            media (min-width: ${min}px)
                $hook
            }
        $else
            $hook

    $fragment media-breakpoint-down
        $params &name, &breakpoints|&grid_breakpoints
        - Media of at most the maximum breakpoint width. No query for the largest breakpoint.
        - Makes the @content apply to the given breakpoint and narrower.
        $ var max = breakpoint_max(name, breakpoints);

        $if max
            media (max-width: ${max}px)
                $hook
            }
        $else
            $hook

    $fragment media-breakpoint-between
        $params &lower, &upper, &breakpoints|&grid_breakpoints
        - Media that spans multiple breakpoint widths.
        - Makes the @content apply between the min and max breakpoints
        $ var min = breakpoint_min(lower, breakpoints)
        $ var max = breakpoint_max(upper, breakpoints)

        $if min != null and max != null
            media (min-width: ${min}) and (max-width: ${max}) 
                $hook
        $elif max == null
            media-breakpoint-up(&lower, &breakpoints)
                $hook
        $elif min == null
            media-breakpoint-down(&upper, &breakpoints) 
                $hook

    $fragment media-breakpoint-only
        $params &name, &breakpoints|&grid_breakpoints
        -- Media between the breakpoint's minimum and maximum widths.
        -- No minimum for the smallest breakpoint, and no maximum for the largest one.
        -- Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.
        $ var min = breakpoint_min(name, breakpoints);
        $ var max = breakpoint-max(name, breakpoints);

        $if min != null and max != null
            media (min-width: ${min}) and (max-width: ${max}) 
                $hook
        $elif max == null
            media-breakpoint-up(&name, &breakpoints) 
                $hook
        $elif min == null
            media-breakpoint-down(&name, &breakpoints)
                $hook