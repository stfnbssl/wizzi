module
	kind jsfile

    $
        var opt = {
            level: 0,
            step: 1,
            name: 'errors_step_1',
            title: 'Wizzi factory - errors',
            folderLevel: 2
        }

    common\example\wizzi(&opt)

        $append plugins
            [ items
                @ 'wizzi-js'
                @ './wizzi-web/index'
                @ './wizzi-core/index'
            @ pluginsBaseFolder pluginsBaseFolder

        var htmlFriendsPath
			_ path.join
                @ __dirname
                @ 'ittf'
                @ 'friends.html.ittf'
        
        var htmlFriendsPathIttf
			_ path.join
                @ __dirname
                @ 'ittf'
                @ 'friends.ittf.ittf'

        var friendsArray
            [ 
                @ 'arthur'
                @ 'mary'

        _ createWizziFactory
            {
            f_cb_test(wf)

                # Generate the html model.
                    # The html schema is detected from the path.
                _ wf.loadModel
                    @ 'ittf'
                    @ htmlFriendsPathIttf
                    {
                        { mTreeBuildUpContext                    
                            @ friends friendsArray
                    f_cb_no_err(wizziModel)
                        _ printObject
                            @ 'error'
                            @ err
                        
                        # Generate the html document artifact.
                            # No options, the default artifact generator
                            # for the html schema will be used.
                        _ wf.loadModelAndGenerateArtifact
                            @ htmlFriendsPath
                            {
                                { modelRequestContext
                                    @ friends friendsArray
                            @ 'html/documentInexistent'
                            f_cb_no_err(artifactText)
                                _ printObject
                                    @ 'error'
                                    @ err

