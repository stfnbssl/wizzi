$group
    #
        # Build, if not existent, and retrieve the contexts of a WizziMetaProduction by its production name.
        # Returns
            # { metaContextDefs
                # string productionName
                # { metaCtxSchema
                # { wzCtxSchema
    m getMetaContextDefs
        param productionName
        param callback
        +
        var metaContextDefs = this.metaContextDefs[productionName] || null
        +
        if metaContextDefs != null
            r_cb( metaContextDefs )
        +
        set metaContextDefs = {}
        return
            _ this.getTParams
                @ productionName
                @ metaContextDefs
                a_cb()
                    set metaContextDefs.productionName = productionName
                    set this.metaContextDefs[productionName] = metaContextDefs
                    r_cb( metaContextDefs )
    #
        # Enrich the metaContextDefs object with the ittf/t/params folder
        # that contains the templates for declaring context parameters of meta productions.
        # Returns a chained call to the getMetaCtxSchema method.
    m getTParams
        param productionName
        param metaContextDefs
        param callback
        var folderPath = packi.filePrefix + 't/params'
        _ this.jsonFile.isDirectory
            @ folderPath
            a_cb( result )
                # loog 'getTParams', productionName, folderPath, result
                if result
                    _ this.createPackifilesFromFs
                        @ folderPath
                        a_cb( result )
                            set metaContextDefs.ittfTParams = result
                            return
                                _ this.getMetaCtxSchema
                                    @ productionName
                                    @ metaContextDefs
                                    @ callback
                else
                    return
                        _ this.getMetaCtxSchema
                            @ productionName
                            @ metaContextDefs
                            @ callback
    #
        # If the ittf/<productionName>/metaCtxSchema folder exists
        # Enrich the metaContextDefs object with the metaCtxSchema property
        # that contains a packiFile object with the content of the ittf/<productionName>/metaCtxSchema folder.
        # Returns a chained call to the getWzCtxSchema method.
    m getMetaCtxSchema
        param productionName
        param metaContextDefs
        param callback
        var folderPath = packi.filePrefix + productionName + '/metaCtxSchemas'
        _ this.jsonFile.isDirectory
            @ folderPath
            a_cb(result)
                # loog 'getMetaCtxSchema', productionName, folderPath, result
                if result
                    _ this.createPackifilesFromFs
                        @ folderPath
                        a_cb( result )
                            set metaContextDefs.metaCtxSchema = result
                            r_cb()
                else
                    r_cb()
