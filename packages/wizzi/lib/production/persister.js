/*
    artifact generator: C:\Users\stfnb\AppData\Roaming\npm\node_modules\@wizzi\cli\node_modules\@wizzi\plugin.js\lib\artifacts\js\module\gen\main.js
    package: @wizzi/plugin.js@0.8.9
    primary source IttfDocument: C:\My\wizzi\stfnbssl\wizzi\packages\wizzi\.wizzi\lib\production\persister.js.ittf
    utc time: Thu, 02 Jan 2025 12:51:28 GMT
*/
// generated by wizzi.plugin.js.artifacts.js.module.gen.main
function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var path = require('path');
var util = require('util');
var async = require('async');
// TODO VIA var file = require('@wizzi/utils').file
var log = require('../util/log')(module)
;

function logme() {
    if (false) {
        console.log.apply(console, arguments);
    }
}

var ArtifactPersister = (function () {
    function ArtifactPersister(productionStep) {
        _classCallCheck(this, ArtifactPersister);
        this.productionStep = productionStep;
        log.setLevel(productionStep.productionManager.options.verbose)
    }
    ArtifactPersister.prototype.toFile = function(callback) {
        var that = this;
        
        // TODO
        
        // Write here model DOM artifacts ?
        
        // The wizzi model DOM artifacts could be generated in memory and retrieved
        
        // by the this.productionStep.getItemsToPersistToFile() method
        
        // TODO Add more info to result info ?
        if (this.productionStep.isWizziModelDomArtifact()) {
            return callback(null, [
                    {
                        oper: 'generate-model-DOM', 
                        status: 'success', 
                        item: {
                            filePath: 'Unavailable'
                         }
                     }
                ]);
        }
        else {
            this.productionStep.getItemsToPersistToFile(function(err, items) {
                if (err) {
                    return callback(err);
                }
                var results = [];
                var fileService = that.productionStep.getFileService();
                function doit(ndx) {
                    var item = items[ndx];
                    if (!item) {
                        return callback(null, results);
                    }
                    executePersist(fileService, item, function(err, result) {
                        if (err) {
                            return callback(err);
                        }
                        results.push(result)
                        process.nextTick(() => 
                            doit(ndx + 1)
                        )
                    })
                }
                doit(0)
            })
        }
    }
    ArtifactPersister.prototype.toTest = function() {
        var ret = [];
        this.productionStep.getItemsToPersistToFile(function(err, items) {
            if (err) {
                return callback(err);
            }
            var i, i_items=items, i_len=items.length, item;
            for (i=0; i<i_len; i++) {
                item = items[i];
                ret.push({
                    filePath: item.filePath, 
                    content: item.genContext.getContent()
                 })
            }
        })
        return ret;
    }
    return ArtifactPersister;
})();

function asyncArtifactFilePersister_hof(productionStep) {
    var fileService = productionStep.getFileService();
    return function(persisteable, callback) {
            executePersist(fileService, persisteable, callback)
        };
}
function executePersist(fileService, persisteable, callback) {
    
    logme('AsyncArtifactFilePersister.persist', persisteable.filePath, persisteable.genContext.getContent())
    
    fileService.openWrite(persisteable.filePath, (err, stream) => {
        if (err) {
            console.log("[31m%s[0m", err);
            return callback(err);
        }
        persisteable.genContext.toStream(stream);
        stream.end((err, notUsed) => {
            if (err) {
                console.log("[31m%s[0m", err);
                return callback(err);
            }
            log.success('Written to file: ' + persisteable.filePath);
            callback(null, {
                oper: 'persist-to-file', 
                item: {
                    filePath: persisteable.filePath
                 }, 
                status: 'success'
             })
        }
        )
    }
    )
}

module.exports = {
    ArtifactPersister: ArtifactPersister
};